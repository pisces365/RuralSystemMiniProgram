{"version":3,"sources":["webpack:///D:/uni-appWorkSpace/RuralSystemMiniProgram/RuralSystemMiniProgram/uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.vue?38b7","webpack:///D:/uni-appWorkSpace/RuralSystemMiniProgram/RuralSystemMiniProgram/uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.vue?1245","webpack:///D:/uni-appWorkSpace/RuralSystemMiniProgram/RuralSystemMiniProgram/uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.vue?2684","webpack:///D:/uni-appWorkSpace/RuralSystemMiniProgram/RuralSystemMiniProgram/uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.vue?169a","uni-app:///uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.vue"],"names":["renderjs","component","options","__file","components","sPicker","e","message","indexOf","console","error","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped","name","mixins","props","title","String","type","default","visible","Boolean","value","Number","start","end","showTag","filter","Function","showCancel","mask","maskClose","data","computed","c_class","$mergeClass","custom_class","startTime","yearReg","test","date","endTime","startYear","parseInt","startMonth","startDay","startHour","startMinute","endYear","endMonth","endDay","endHour","endMinute","yearList","list","push","label","tag","filterList","monthList","dayList","year","month","hourList","range","getListRange","minuteList","min","max","hour","initState","watch","init","setValue","created","methods","columns","values","every","valueList","updateVisible","$emit","Date","slice","onChange","i","setData","onCancel","onConfirm","timestamp","dataList"],"mappings":"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","file":"uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./s-date-time-picker.vue?vue&type=template&id=3e932a22&\"\nvar renderjs\nimport script from \"./s-date-time-picker.vue?vue&type=script&lang=js&\"\nexport * from \"./s-date-time-picker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/s-ui/components/s-date-time-picker/s-date-time-picker.vue\"\nexport default component.exports","export * from \"-!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./s-date-time-picker.vue?vue&type=template&id=3e932a22&\"","var components\ntry {\n  components = {\n    sPicker: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/s-ui/components/s-picker/s-picker\" */ \"@/uni_modules/s-ui/components/s-picker/s-picker.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./s-date-time-picker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./s-date-time-picker.vue?vue&type=script&lang=js&\"","<template>\r\n  <s-picker\r\n    ref=\"picker\"\r\n    :custom-class=\"c_class\"\r\n    :custom-style=\"custom_style\"\r\n    multiple\r\n    :title=\"title\"\r\n    :visible=\"visible\"\r\n    :columns=\"columns\"\r\n    :value=\"values\"\r\n    :show-cancel=\"showCancel\"\r\n    :mask=\"mask\"\r\n    :mask-close=\"maskClose\"\r\n    @change=\"onChange\"\r\n    @update:visible=\"updateVisible\"\r\n    @cancel=\"onCancel\"\r\n    @confirm=\"onConfirm\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport componentMixin from '../../mixins/componentMixin';\r\nimport formatDate from '../../utils/formatDate';\r\nimport getDaysInMonth from '../../utils/getDaysInMonth';\r\nimport parseDate from '../../utils/parseDate';\r\n\r\nconst yearReg = /^\\d{4}$/;\r\nconst timeReg = /^\\d{2}(:\\d{2})+$/;\r\n\r\n/**\r\n * s-date-time-picker 日期时间选择器\r\n * @description 选择日期和时间\r\n * @property {String} title 标题\r\n * @property {String} type = [date | time | datetime | year | month]  选择类型\r\n * @property {Boolean} visible 显示隐藏，双向绑定\r\n * @property {String|Number} value 选择结果，双向绑定\r\n * @property {String|Number} start 开始时间\r\n * @property {String|Number} end 结束时间\r\n * @property {Boolean} showTag 是否显示中文单位\r\n * @property {Function} filter ({name,list,valueList}) 过滤每列数据\r\n * @property {Boolean} showCancel 是否显示取消按钮\r\n * @property {Boolean} mask 是否显示遮罩\r\n * @property {Boolean} maskClose 点击遮罩是否关闭\r\n * @event {Function} cancel 点击取消按钮或遮罩关闭取消时触发\r\n * @event {Function} confirm ({type,value,valueList,dataList,timestamp}) 选中事件\r\n * @example <s-date-time-picker v-model=\"date\" :visible.sync=\"dateVisible\" />\r\n */\r\nexport default {\r\n  name: 'SDateTimePicker',\r\n  mixins: [componentMixin],\r\n  props: {\r\n    title: String,\r\n    type: {\r\n      type: String,\r\n      default: 'date',\r\n    },\r\n    visible: Boolean,\r\n    value: [String, Number],\r\n    start: {\r\n      type: [String, Number],\r\n      default: '1970/01/01 00:00',\r\n    },\r\n    end: {\r\n      type: [String, Number],\r\n      default: formatDate(new Date(new Date().getFullYear() + 10, 11, 31), 'YYYY/MM/DD 23:59'),\r\n    },\r\n    showTag: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    filter: Function,\r\n    showCancel: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    mask: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    maskClose: Boolean,\r\n  },\r\n  data: () => ({\r\n    columns: [],\r\n    values: [],\r\n    valueList: [],\r\n    strDate: formatDate(new Date(), 'YYYY/MM/DD'),\r\n  }),\r\n  computed: {\r\n    c_class() {\r\n      return this.$mergeClass('s-date-time-picker', this.custom_class);\r\n    },\r\n    startTime() {\r\n      const { start, endTime, strDate } = this;\r\n      let date = start;\r\n      if (yearReg.test(date)) {\r\n        date = `${date}/01/01`;\r\n      } else if (timeReg.test(date)) {\r\n        date = `${strDate} ${date}`;\r\n      }\r\n      date = parseDate(date).getTime();\r\n      return date > endTime ? endTime : date;\r\n    },\r\n    endTime() {\r\n      const { end, strDate } = this;\r\n      let date = end;\r\n      if (yearReg.test(date)) {\r\n        date = `${date}/01/01`;\r\n      } else if (timeReg.test(date)) {\r\n        date = `${strDate} ${date}`;\r\n      }\r\n      return parseDate(date).getTime();\r\n    },\r\n    startYear() {\r\n      return parseInt(formatDate(this.startTime, 'YYYY'));\r\n    },\r\n    startMonth() {\r\n      return parseInt(formatDate(this.startTime, 'MM'));\r\n    },\r\n    startDay() {\r\n      return parseInt(formatDate(this.startTime, 'DD'));\r\n    },\r\n    startHour() {\r\n      return parseInt(formatDate(this.startTime, 'HH'));\r\n    },\r\n    startMinute() {\r\n      return parseInt(formatDate(this.startTime, 'mm'));\r\n    },\r\n    endYear() {\r\n      return parseInt(formatDate(this.endTime, 'YYYY'));\r\n    },\r\n    endMonth() {\r\n      return parseInt(formatDate(this.endTime, 'MM'));\r\n    },\r\n    endDay() {\r\n      return parseInt(formatDate(this.endTime, 'DD'));\r\n    },\r\n    endHour() {\r\n      return parseInt(formatDate(this.endTime, 'HH'));\r\n    },\r\n    endMinute() {\r\n      return parseInt(formatDate(this.endTime, 'mm'));\r\n    },\r\n    yearList() {\r\n      const list = [];\r\n      const { startYear, endYear, showTag } = this;\r\n      const tag = showTag ? '年' : '';\r\n      for (let i = startYear; i <= endYear; i++) {\r\n        const value = String(i).padStart(4, '0');\r\n        list.push({ label: value + tag, value });\r\n      }\r\n      return this.filterList('year', list);\r\n    },\r\n    monthList() {\r\n      const list = [];\r\n      const { showTag } = this;\r\n      const tag = showTag ? '月' : '';\r\n      const [start, end] = this.getListRange(1, 'YYYY', 1, 12);\r\n      for (let i = start; i <= end; i++) {\r\n        const value = String(i).padStart(2, '0');\r\n        list.push({ label: value + tag, value });\r\n      }\r\n      return this.filterList('month', list);\r\n    },\r\n    dayList() {\r\n      const list = [];\r\n      const [year, month] = this.valueList;\r\n      if (year && month) {\r\n        const { showTag } = this;\r\n        const tag = showTag ? '日' : '';\r\n        const [start, end] = this.getListRange(2, 'YYYYMM', 1, getDaysInMonth(year, month));\r\n        for (let i = start; i <= end; i++) {\r\n          const value = String(i).padStart(2, '0');\r\n          list.push({ label: value + tag, value });\r\n        }\r\n      }\r\n      return this.filterList('day', list);\r\n    },\r\n    hourList() {\r\n      const list = [];\r\n      const { type, startHour, endHour, showTag } = this;\r\n      const tag = showTag ? '时' : '';\r\n      let range = [0, 0];\r\n      if (type === 'time') {\r\n        range = [startHour, endHour];\r\n      } else {\r\n        range = this.getListRange(3, 'YYYYMMDD', 0, 23);\r\n      }\r\n      const [start, end] = range;\r\n      for (let i = start; i <= end; i++) {\r\n        const value = String(i).padStart(2, '0');\r\n        list.push({ label: value + tag, value });\r\n      }\r\n      return this.filterList('hour', list);\r\n    },\r\n    minuteList() {\r\n      const list = [];\r\n      const { type, startHour, endHour, startMinute, endMinute, showTag } = this;\r\n      const tag = showTag ? '分' : '';\r\n      let range = [0, 0];\r\n      const min = 0;\r\n      const max = 59;\r\n      if (type !== 'time') {\r\n        range = this.getListRange(4, 'YYYYMMDDHH', min, max);\r\n      } else {\r\n        let [hour] = this.valueList;\r\n        if (hour) {\r\n          hour = parseInt(hour);\r\n          range = [\r\n            hour <= startHour ? startMinute : min,\r\n            hour >= endHour ? endMinute : max,\r\n          ];\r\n        }\r\n      }\r\n      const [start, end] = range;\r\n      for (let i = start; i <= end; i++) {\r\n        const value = String(i).padStart(2, '0');\r\n        list.push({ label: value + tag, value });\r\n      }\r\n      return this.filterList('minute', list);\r\n    },\r\n    initState() {\r\n      return [\r\n        this.type,\r\n        this.startTime,\r\n        this.endTime,\r\n      ];\r\n    },\r\n  },\r\n  watch: {\r\n    initState() {\r\n      this.init();\r\n    },\r\n    value() {\r\n      this.setValue(this.value);\r\n    },\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      switch (this.type) {\r\n        case 'datetime':\r\n          this.columns = [this.yearList, this.monthList, this.dayList, this.hourList, this.minuteList];\r\n          break;\r\n        case 'year':\r\n          this.columns = [this.yearList];\r\n          break;\r\n        case 'month':\r\n          this.columns = [this.yearList, this.monthList];\r\n          break;\r\n        case 'time':\r\n          this.columns = [this.hourList, this.minuteList];\r\n          break;\r\n        default:\r\n          this.columns = [this.yearList, this.monthList, this.dayList];\r\n          break;\r\n      }\r\n      this.setValue(this.value);\r\n    },\r\n    getListRange(n, fmt, min, max) {\r\n      const { startTime, endTime, valueList } = this;\r\n      const values = valueList.slice(0, n);\r\n      let range = [0, 0];\r\n      if (values.every(value => value)) {\r\n        const current = values.join('');\r\n        range = [\r\n          current <= formatDate(startTime, fmt) ? this[[\r\n            'startYear',\r\n            'startMonth',\r\n            'startDay',\r\n            'startHour',\r\n            'startMinute',\r\n          ][n]] : min,\r\n          current >= formatDate(endTime, fmt) ? this[[\r\n            'endYear',\r\n            'endMonth',\r\n            'endDay',\r\n            'endHour',\r\n            'endMinute',\r\n          ][n]] : max,\r\n        ];\r\n      }\r\n      return range;\r\n    },\r\n    filterList(name, list) {\r\n      const filter = this.$getPropsFn('filter');\r\n      return filter ? filter({\r\n        name,\r\n        list,\r\n        valueList: this.valueList,\r\n      }) : list;\r\n    },\r\n    updateVisible(visible) {\r\n      this.$emit('update:visible', visible);\r\n    },\r\n    setValue(value) {\r\n      const { type, strDate } = this;\r\n      let date = value;\r\n      if (!date) {\r\n        date = new Date();\r\n      } else if (yearReg.test(date)) {\r\n        date = `${date}/01/01`;\r\n      } else if (timeReg.test(date)) {\r\n        date = `${strDate} ${date}`;\r\n      }\r\n      date = parseDate(Math.min(Math.max(parseDate(date).getTime(), this.startTime), this.endTime));\r\n      const values = [\r\n        formatDate(date, 'YYYY'),\r\n        formatDate(date, 'MM'),\r\n        formatDate(date, 'DD'),\r\n        formatDate(date, 'HH'),\r\n        formatDate(date, 'mm'),\r\n      ];\r\n      switch (type) {\r\n        case 'year':\r\n          this.values = values.slice(0, 1);\r\n          break;\r\n        case 'month':\r\n          this.values = values.slice(0, 2);\r\n          break;\r\n        case 'datetime':\r\n          this.values = values.slice(0);\r\n          break;\r\n        case 'time':\r\n          this.values = values.slice(3);\r\n          break;\r\n        default:\r\n          this.values = values.slice(0, 3);\r\n          break;\r\n      }\r\n    },\r\n    onChange({ i, setData, valueList }) {\r\n      this.valueList = valueList;\r\n      switch (this.type) {\r\n        case 'datetime':\r\n          if (i < 1) {\r\n            setData(1, this.monthList);\r\n          }\r\n          if (i < 2) {\r\n            setData(2, this.dayList);\r\n          }\r\n          if (i < 3) {\r\n            setData(3, this.hourList);\r\n          }\r\n          if (i < 4) {\r\n            setData(4, this.minuteList);\r\n          }\r\n          break;\r\n        case 'year':\r\n          break;\r\n        case 'month':\r\n          if (i < 1) {\r\n            setData(1, this.monthList);\r\n          }\r\n          break;\r\n        case 'time':\r\n          if (i < 1) {\r\n            setData(1, this.minuteList);\r\n          }\r\n          break;\r\n        default:\r\n          if (i < 1) {\r\n            setData(1, this.monthList);\r\n          }\r\n          if (i < 2) {\r\n            setData(2, this.dayList);\r\n          }\r\n          break;\r\n      }\r\n    },\r\n    onCancel() {\r\n      this.$emit('cancel');\r\n    },\r\n    onConfirm({ valueList, dataList }) {\r\n      let value = '';\r\n      let date = '';\r\n      const { type, strDate } = this;\r\n      switch (type) {\r\n        case 'datetime':\r\n          date = parseDate(valueList.slice(0, 3).join('/') + ' ' + valueList.slice(3, 5).join(':'));\r\n          value = formatDate(date, 'YYYY-MM-DD HH:mm');\r\n          break;\r\n        case 'year':\r\n          date = parseDate(valueList[0] + '/01/01');\r\n          value = formatDate(date, 'YYYY');\r\n          break;\r\n        case 'month':\r\n          date = parseDate(valueList.join('/') + '/01');\r\n          value = formatDate(date, 'YYYY-MM');\r\n          break;\r\n        case 'time':\r\n          date = parseDate(strDate + ' ' + valueList.join(':'));\r\n          value = formatDate(date, 'HH:mm');\r\n          break;\r\n        default:\r\n          date = parseDate(valueList.join('/'));\r\n          value = formatDate(date, 'YYYY-MM-DD');\r\n          break;\r\n      }\r\n      let timestamp = date.getTime();\r\n      if (type === 'time') {\r\n        timestamp -= parseDate(strDate).getTime();\r\n      }\r\n      this.$emit('input', value);\r\n      this.$emit('confirm', {\r\n        type,\r\n        value,\r\n        valueList,\r\n        dataList,\r\n        timestamp,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":""}